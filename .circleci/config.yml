version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/workspace
    docker:
      - image: circleci/ruby:2.5.0-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.3-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: broad_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - broad-v2-{{ checksum "Gemfile.lock" }}
            - broad-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - run:
        name: Install Chrome Headless
        command: curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable build-essential jq git openssh-server \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

      - run:
            name: Set ENV for chrome
            command: ENV CHROME_BIN /usr/bin/google-chrome

      # Store bundle cache
      - save_cache:
          key: broad-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          key: broad-npm-{{ checksum "package.json" }}

      - run:
        name: install-npm
        command: npm install

      - save_cache:
          key: broad-npm-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run:
          name: Webpack
          command: bin/webpack

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - type: shell
        command: |
          cp .env.development .env.test

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run: mkdir ~/test_results

      - type: shell
        command: |
          ./cc-test-reporter before-build
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out ~/test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          ./cc-test-reporter after-build format-coverage -t simplecov


      # Save test results for timing analysis
      - store_test_results:
          path: ~/test_results

      - deploy:
          name: Maybe Deploy
          command: |
            ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push dokku@$DEPLOY_HOST:broad master
            fi