# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `guard-rails` gem.
# Please instead update this file by running `bin/tapioca gem guard-rails`.

# Provided empty definition so requiring the plugin without Guard won't crash
# (e.g. when added to a Gemfile without `require: false`)
module Guard; end

class Guard::Rails < ::Guard::Plugin
  # @return [Rails] a new instance of Rails
  def initialize(options = T.unsafe(nil)); end

  # Returns the value of attribute options.
  def options; end

  def reload(action = T.unsafe(nil)); end
  def run_on_change(paths); end
  def run_on_changes(paths); end

  # Returns the value of attribute runner.
  def runner; end

  def start; end
  def stop; end
end

Guard::Rails::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

class Guard::Rails::Runner
  # @return [Runner] a new instance of Runner
  def initialize(options); end

  def build_command; end
  def environment; end

  # Returns the value of attribute options.
  def options; end

  def pid; end
  def pid_file; end
  def restart; end
  def sleep_time; end
  def start; end
  def stop; end
  def wait_for_zeus; end

  private

  def build_cli_command; end

  # command builders
  def build_options; end

  def build_rails_command; end
  def build_zeus_command; end

  # @return [Boolean]
  def has_pid?; end

  def kill_process(signal, pid); end
  def kill_unmanaged_pid!; end
  def read_pid; end
  def remove_pid_file_and_wait_for_no_pid; end
  def run_rails_command!; end
  def unmanaged_pid; end
  def wait_for_loop; end
  def wait_for_no_pid; end
  def wait_for_pid; end
  def wait_for_pid_action; end
  def without_bundler_env; end
  def zeus_sockfile; end
end

Guard::Rails::Runner::MAX_WAIT_COUNT = T.let(T.unsafe(nil), Integer)
